// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id            String      @id @map("_id") @default(auto()) @db.ObjectId
  clerkId       String      @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  tasks         Task[]
  categories    Category[]
  @@map("user")
}

model Task{
  id             String     @id @map("_id") @default(auto()) @db.ObjectId
  userId         String     @db.ObjectId
  title          String
  description    String?     
  dueDate        DateTime
  priority       priority
  status         status     @default(PENDING)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  user           User       @relation(fields: [userId], references: [id])
  taskLogs       TaskLog[]
  categories     TaskCategory[]
  @@map("task")
}

model TaskLog{
  id            String      @id @map("_id") @default(auto()) @db.ObjectId
  taskId        String      @db.ObjectId
  action        String
  createdAt     DateTime    @default(now())
  task          Task        @relation(fields: [taskId], references: [id])
  @@map("taskLog")
}

model Category{
  id            String      @id @map("_id") @default(auto()) @db.ObjectId
  userId        String      @db.ObjectId
  name          String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  user          User        @relation(fields: [userId], references: [id])
  tasks         TaskCategory[]
  @@map("category")
}

model TaskCategory{
  id            String      @id @map("_id") @default(auto()) @db.ObjectId
  taskId        String      @db.ObjectId
  categoryId    String      @db.ObjectId
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  task          Task        @relation(fields: [taskId], references: [id])
  category      Category    @relation(fields: [categoryId], references: [id])
  @@map("taskCategory")
}


enum status{
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum priority{
  LOW
  MEDIUM
  HIGH
}